extends:
  - example_config_alb_auth.yaml

# Add a random secret to `jwt_secret`, and uncomment.. This secret is used to sign and verify authenticated
# user JWTs, which are stored as cookies in the user's browser. If you do not provide a jwt_secret,
# one will be randomly generated by each ConsoleMe instance.
# If you are load balancing requests between multiple ConsoleMe instances,
# the user will fail authentication when their request hits an instance other than the one that generated their
# auth cookie.
jwt_secret: secret_for_now

aws:
  issuer: Protopie
  region: 'ap-northeast-2'

tornado:
  debug: true
  port: 8081
  xsrf: true
  uvloop: false

challenge_url:
  enabled: true

# Enter your team's e-mail address here. This e-mail will be used as the default approvers of IAM policy requests
application_admin: ${application_admin}
development: false
environment: prod

logging:
  stdout_enabled: true
  format: '%(asctime)s - %(levelname)s - %(name)s - [%(filename)s:%(lineno)s - %(funcName)s() ] - %(message)s'
  level: debug
  file: /logs/consoleme/consoleme_tornado.log

account_ids_to_name:
  '${account-dev}': '${account-dev-label}'
  '${account}': '${account-label}'
  '${account-ent}': '${account-ent-label}'

cloud_credential_authorization_mapping:
  role_tags:
    enabled: true
    required_trust_policy_entity: arn:aws:iam::${account-dev}:role/consolemeInstanceProfile
  dynamic_config:
    enabled: true
  internal_plugin:
    enabled: false

slack:
  notifications_enabled: true
  webhook_url: ${slack-webhook-url}

policies:
  role_name: ConsoleMeTarget

celery:
  active_region: ${region}

auth:
  logout_redirect_url: '${logout_url}'
  get_user_by_aws_alb_auth: true
  extra_auth_cookies:
    - AWSELBAuthSessionCookie-0
  set_auth_cookie: true
  remote_ip:
    trusted_remote_ip_header: X-Forwarded-For

get_user_by_aws_alb_auth_settings:
  access_token_validation:
    metadata_url: https://accounts.google.com/.well-known/openid-configuration
  #    for Google: https://accounts.google.com/.well-known/openid-configuration
  #    for Cognito: https://cognito-idp.us-east-1.amazonaws.com/<REPLACE_WITH_COGNITO_POOL_ID>/.well-known/openid-configuration
  #    for Okta: https://YOURDOMAIN.okta.com/oauth2/default/.well-known/oauth-authorization-server
  jwt_email_key: ${jwt_email_key}
  jwt_groups_key: ${jwt_groups_key}

url: ${user_facing_url}

# If you have read this far and modified the above config variables to production ready values
# remove the below config variable, or switch it to false
example_config:
  is_example_config: false
  title: 'Warning:'
  text: |-
    This configuration has no authentication configured. Do not use in a production environment. Do not publicly expose this endpoint or your AWS environment will be compromised! Click [here](/generate_config) to generate a configuration.
  routes: .*
